variables:
  DOCKER_HOST: unix:///var/run/docker.sock
  GCS_BUCKET: sizer.ocs.ninja
  GCS_PROJECT: apt-quarter-272014

default:
  image:
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:alpine
  before_script:
    - apk update && apk add -u yarn
    - cd "$CI_PROJECT_DIR"
    - yarn install
  artifacts:
    paths:
      - "*.html"
      - lib/
    expire_in: 1 month
  cache:
    paths:
      - node_modules

stages:
  - test
  - build
  - deploy

eslint:
  stage: test
  script:
    - ./node_modules/.bin/eslint --ext ".js,.ts" src/

build:
  stage: build
  script:
    - if [[ "$CI_COMMIT_BRANCH" == "develop" ]]; then PRE_BUILD="beta"; fi
    - yarn ${PRE_BUILD}build

push-to-google-storage:
  stage: deploy
  only:
    - main
    - develop
  script:
    - ls -al && ls -al lib
    - echo -n "${GCS_SA_KEY}" | base64 -d > /tmp/key.json
    - /google-cloud-sdk/bin/gcloud auth activate-service-account --key-file=/tmp/key.json --project="${GCS_PROJECT}"
    - rm /tmp/key.json
    - if [[ "$CI_COMMIT_BRANCH" == "develop" ]]; then GCP_DIR="beta/"; fi
    - /google-cloud-sdk/bin/gsutil -m cp -r "${CI_PROJECT_DIR}/*.html" "gs://${GCS_BUCKET}/${GCP_DIR}"
    - /google-cloud-sdk/bin/gsutil -m cp -r "${CI_PROJECT_DIR}/lib/*" "gs://${GCS_BUCKET}/${GCP_DIR}"
    # Make all files public
    - /google-cloud-sdk/bin/gsutil -m acl set -r "${CI_PROJECT_DIR}/gsutil-public.json" "gs://${GCS_BUCKET}/${GCP_DIR}**"
    # Make the redhat specific file only accessible for the Red Hat domain
    - /google-cloud-sdk/bin/gsutil -m acl set -r "${CI_PROJECT_DIR}/gsutil-redhat.json" "gs://${GCS_BUCKET}/**/redhat.js"
